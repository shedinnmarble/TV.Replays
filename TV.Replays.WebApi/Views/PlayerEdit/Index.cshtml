@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    List<string> categories = new List<string>();
    categories.Add("现役选手");
    categories.Add("退役选手");
    categories.Add("知名解说");
    categories.Add("高端路人");
    categories.Add("美女玩家");
    categories.Add("RN水友");

    List<string> tvNames = new List<string>();
    tvNames.Add(TV.Replays.Model.TvName.斗鱼Tv.ToString());
    tvNames.Add(TV.Replays.Model.TvName.战旗Tv.ToString());
    tvNames.Add(TV.Replays.Model.TvName._17173.ToString());
    tvNames.Add(TV.Replays.Model.TvName.火猫Tv.ToString());
}
@model IEnumerable<TV.Replays.Model.Player>
<br />
<br />
<br />
<br />
<p>
    @Html.ActionLink("新增", "Create")
</p>
<table class="table">
    <tr>
        <th width="180">
            <div class="btn-group">
                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
                    名字 <span class="caret"></span>
                </button>
                <ul class="dropdown-menu" role="menu">
                    <li>
                        @Html.ActionLink("全部", "")
                    </li>
                    <li>
                        @Html.ActionLink("在线", "", new { isOnline = true })
                    </li>
                </ul>
            </div>
        </th>
        <th width="200">
            <div class="btn-group">
                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
                    直播间 <span class="caret"></span>
                </button>
                <ul class="dropdown-menu" role="menu">
                    @foreach (var item in tvNames)
                    {
                        <li>
                            @Html.ActionLink(item, "Index", new { tv = item })
                        </li>
                    }
                </ul>
            </div>

        </th>
        <th width="200">
            <div class="btn-group">
                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
                    选手类型 <span class="caret"></span>
                </button>
                <ul class="dropdown-menu" role="menu">
                    @foreach (var item in categories)
                    {
                        <li>
                            @Html.ActionLink(item, "index", new { category = item })
                        </li>
                    }
                </ul>
            </div>
        </th>
        <th width="180">
            <div class="btn-group">
                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
                    推荐 <span class="caret"></span>
                </button>
                <ul class="dropdown-menu" role="menu">
                    <li>
                        @Html.ActionLink("全部", "")
                    </li>
                    <li>
                        @Html.ActionLink("已推荐", "", new { recommend = true })
                    </li>
                </ul>
            </div>
        </th>
        <th>
            <div class="btn-group">
                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
                    推荐指数 <span class="caret"></span>
                </button>
                <ul class="dropdown-menu" role="menu">
                    <li>
                        @Html.ActionLink("倒序", "", new { isDesc = true })
                    </li>
                    <li>
                        @Html.ActionLink("正序", "", new { isDesc = false })
                    </li>
                </ul>
            </div>
        </th>
        <th></th>
        <th></th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @if (item.IsOnline())
                {
                    <span style="color:green;"><b>@item.Name</b></span>
                }
                else
                {
                    <span style="color:gray">@item.Name</span>
                }
            </td>
            <td>@string.Join(" , ", item.LiveRooms.Select(a => a.Name))</td>
            @if (item.Categories != null)
            {
                <td>@string.Join(" , ", item.Categories)</td>
            }
            else
            {
                <td></td>
            }
            <td>
                @if (item.Recommend)
                {
                    @Html.ActionLink("取消推荐", "CancelRecommend", new { id = item.Id }, new { style = "color:red" })
                }
                else
                {
                    @Html.ActionLink("推荐", "Recommend", new { id = item.Id })
                }
            </td>
            <td>
                @using (Html.BeginForm("EditLevel", "PlayerEdit"))
                {
                    @Html.TextBox("level", item.Level, new { type = "number", calss = "form-control", style = "width:50px;" })
                    @Html.Hidden("id", item.Id)
                    <input type="submit" class="btn-link" value="保存" />
                }

            </td>
            <td>
                @Html.ActionLink("编辑", "Edit", new { id = item.Id })
            </td>
            <td>
                @Html.ActionLink("删除", "Delete", new { id = item.Id }, new { name = "deleteLink" })
            </td>
        </tr>
    }
</table>



<div id="paginator" class="pagination-lg" style="width:650px;">
    <ul class="pagination"></ul>
</div>
<script src="~/Scripts/bootstrap-paginator.js"></script>
<script>
    var options = {
        currentPage: "@ViewBag.CurrentIndex",
        totalPages: "@ViewBag.TotalPages",
        numberOfPages: "@ViewBag.NumberOfPages",
        pageUrl: function (type, page, current) {
            return "/live/playeredit?page=" + page;
        }
    }
    $("#paginator").bootstrapPaginator(options);

    $("a[name='deleteLink']").click(function () {
        if (!confirm("您确认删除么?"))
            return false;
    })
</script>
